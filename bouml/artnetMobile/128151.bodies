class Accueil
!!!128151.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_accueil);
        Log.d(TAG, "onCreate()");

        initialiserHandler();
        initialiserCommunicationBroker();

        vue.initialiserNavbar(this);

        Button boutonRechercherUnivers = findViewById(R.id.boutonRechercherUnivers);
        conteneurUnivers = findViewById(R.id.conteneurUnivers);
        conteneurDetails = findViewById(R.id.conteneurDetails);

        boutonRechercherUnivers.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v)
            {
                vue.afficherUniversExistants(conteneurUnivers, conteneurDetails);
            }
        });
!!!147591.java!!!	onResume() : void
        super.onResume();
        Log.d(TAG, "onResume()");

        if(communicationBroker != null)
            communicationBroker.setHandler(handler);
!!!147719.java!!!	initialiserCommunicationBroker() : void
        Log.d(TAG, "initialiserCommunicationBroker()");
        communicationBroker = CommunicationBroker.getInstance();
        CommunicationBroker.getInstance().initialiserContexte(getApplicationContext());
        communicationBroker.setHandler(handler);
        if(!communicationBroker.estConnecte())
            communicationBroker.connecter();
!!!147847.java!!!	initialiserHandler() : void
        this.handler = new Handler(this.getMainLooper()) {
            @Override
            public void handleMessage(@NonNull Message message)
            {
                // Log.d(TAG, "handleMessage() id message = " + message.what);
                // Log.d(TAG, "handleMessage() message = " + message.obj.toString());
                Bundle bundle;
                switch(message.what)
                {
                    case CommunicationBroker.BROKER_CONNECTE:
                        Log.d(TAG, "handleMessage() BROKER_CONNECTE");
                        communicationBroker.sabonner(CommunicationBroker.TOPIC_ARTNET);
                        break;
                    case CommunicationBroker.BROKER_DECONNECTE:
                        Log.d(TAG, "handleMessage() BROKER_DECONNECTE");
                        break;
                    case CommunicationBroker.BROKER_MESSAGE_RECU:
                        bundle             = (Bundle)message.obj;
                        String topicMQTT   = bundle.getString("topic");
                        String messageMQTT = bundle.getString("message");
                        Log.d(TAG,
                              "handleMessage() BROKER_MESSAGE_RECU " + topicMQTT + " -> " +
                                messageMQTT);
                        traiterMessageMQTT(topicMQTT, messageMQTT);
                        break;
                    case CommunicationBroker.BROKER_ERREUR:
                        bundle        = (Bundle)message.obj;
                        String erreur = bundle.getString("erreur");
                        Log.d(TAG, "handleMessage() BROKER_ERREUR " + erreur);
                        break;
                }
            }
        };
!!!147975.java!!!	traiterMessageMQTT(in topicMQTT : String, in messageMQTT : String) : void
        if(topicMQTT.startsWith("artnet/config/"))
        {
            communicationBroker.traiterMessageConfig(topicMQTT, messageMQTT);
        }
